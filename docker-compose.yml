version: '2'
services:
  db:
    restart: always
    image: armhf/postgres:9.6-alpine
    container_name: mastodon-db
    networks:
      - proxy-network
    volumes:
      - mastodon_postgres:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"
  redis:
    restart: always
    image: armhf/redis
    container_name: mastodon-redis
    command: redis-server --appendonly yes
    networks:
      - proxy-network
    volumes:
      - mastodon_redis:/data
    labels:
      - "traefik.enable=false"

  mastodon-web:
    restart: always
    build: .
    image: gilir/rpi-mastodon
    container_name: mastodon-web
    env_file: .env.production
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    ports:
      - "3000:3000"
      - "4000:4000"
    depends_on:
      - db
      - redis
    networks:
      - proxy-network
    volumes:
      - mastodon_public_assets:/mastodon/public/assets
      - mastodon_public_packs:/mastodon/public/packs
      - mastodon_public_system:/mastodon/public/system
    labels:
      - "traefik.docker.network=proxy-network"
      - "traefik.backend=mastodon-web"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:mastodon.lavergne.online"
#      - "traefik.frontend.passHostHeader=true"
    environment:
      - WEB_CONCURRENCY=1
      - MAX_THREADS=5
      - SIDEKIQ_WORKERS=25
      - RUN_DB_MIGRATIONS=true

#  streaming:
#    restart: always
#    build: .
#    image: gilir/rpi-mastodon
#    container_name: mastodon-streaming
#    env_file: .env.production
#    command: npm run start
#    ports:
#      - "4001:4000"
#    labels:
#      - "traefik.enable=false"
##      - "traefik.docker.network=proxy-network"
##      - "traefik.backend=mastodon-web"
##      - "traefik.port=4000"
##      - "traefik.protocol=wss"
##      - "traefik.frontend.rule=Host:mastodon.lavergne.online;PathPrefixStrip:/api/v1/streaming"
#    depends_on:
#      - db
#      - redis
#    networks:
#      - proxy-network

#  sidekiq:
#    restart: always
#    build: .
#    image: gilir/rpi-mastodon
#    container_name: mastodon-sidekiq
#    env_file: .env.production
#    command: bundle exec sidekiq -q default -q mailers -q pull -q push
#    depends_on:
#      - db
#      - redis
#    volumes:
#      - mastodon_public_system:/mastodon/public/system
#    networks:
#      - proxy-network

networks:
  proxy-network:
    external:
      name: proxy-network

volumes:
  mastodon_postgres:
    external: true
  mastodon_redis:
    external: true
  mastodon_public_assets:
    external: true
  mastodon_public_system:
    external: true
  mastodon_public_packs:
    external: true
